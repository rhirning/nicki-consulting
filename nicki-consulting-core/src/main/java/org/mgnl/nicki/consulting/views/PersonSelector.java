package org.mgnl.nicki.consulting.views;

import java.sql.SQLException;
import java.util.List;

import org.mgnl.nicki.consulting.core.helper.PersonHelper;
import org.mgnl.nicki.consulting.core.model.Person;
import org.mgnl.nicki.consulting.data.BeanContainerDataSource;
import org.mgnl.nicki.db.context.DBContext;
import org.mgnl.nicki.db.context.DBContextManager;
import org.mgnl.nicki.db.profile.InitProfileException;
import org.mgnl.nicki.vaadin.base.application.NickiApplication;
import org.mgnl.nicki.vaadin.base.menu.application.View;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class PersonSelector extends CustomComponent implements View {
	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Table personsTable;


	private static final long serialVersionUID = 1751419839762448157L;
	private static final Logger LOG = LoggerFactory.getLogger(PersonSelector.class);
	private boolean isInit;
	private BeanContainerDataSource<Person> personsContainerDataSource;
	private PersonSelectorParent personSelectorParent;

	public PersonSelector(PersonSelectorParent personSelectorParent) {
		this.personSelectorParent = personSelectorParent;
	}

	@Override
	public void init() {
		if (!isInit) {
			buildMainLayout();
			mainLayout.setMargin(true);
			mainLayout.setWidth("100%");
			setCompositionRoot(mainLayout);
			personsTable.setSelectable(true);
			personsTable.addValueChangeListener(event -> {
				if (event.getProperty().getValue() != null) {
					personSelectorParent.setPerson((Person) event.getProperty().getValue());
				}
			});
			personsContainerDataSource = new BeanContainerDataSource<Person>(Person.class);
			personsTable.setContainerDataSource(personsContainerDataSource);
			LoadPersons();
			isInit = true;
		}
	}

	private void LoadPersons() {
		
		List<Person> persons = PersonHelper.getPersons();
		personsContainerDataSource.removeAllItems();
		personsContainerDataSource.addAll(persons);
		personsTable.setVisibleColumns("name");
	}

	@Override
	public boolean isModified() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void setApplication(NickiApplication arg0) {
		// TODO Auto-generated method stub
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		
		// top-level component properties
		setWidth("100.0%");
		
		// personsTable
		personsTable = new Table();
		personsTable.setImmediate(true);
		personsTable.setWidth("-1px");
		personsTable.setHeight("-1px");
		mainLayout.addComponent(personsTable);
		
		return mainLayout;
	}

}
